"""empty message

Revision ID: 3b7c6fb22949
Revises: 026ca9013d0d
Create Date: 2020-07-20 22:47:10.135452

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3b7c6fb22949'
down_revision = '026ca9013d0d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('area',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('category',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.String(length=20), nullable=True),
    sa.Column('code', sa.String(length=5), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('keyword',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('semester',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('id')
    )
    op.create_table('thesis_keywords',
    sa.Column('thesis_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('keyword_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['keyword_id'], ['keyword.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['thesis_id'], ['thesis.id'], ondelete='CASCADE')
    )
    # op.drop_table('program')
    op.alter_column('section', 'code',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
    op.create_unique_constraint(None, 'section', ['id'])
    op.alter_column('subject', 'code',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
    op.alter_column('subject', 'name',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)
    op.create_unique_constraint(None, 'subject', ['id'])
    op.add_column('thesis', sa.Column('category_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('thesis', sa.Column('research_area_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('thesis', sa.Column('school_year', postgresql.INT4RANGE(), nullable=True))
    op.add_column('thesis', sa.Column('semester_id', postgresql.UUID(as_uuid=True), nullable=True))
    # op.drop_constraint('thesis_program_fkey', 'thesis', type_='foreignkey')
    op.create_foreign_key(None, 'thesis', 'category', ['category_id'], ['id'])
    op.create_foreign_key(None, 'thesis', 'semester', ['semester_id'], ['id'])
    op.create_foreign_key(None, 'thesis', 'area', ['research_area_id'], ['id'])
    op.drop_column('thesis', 'semester')
    op.drop_column('thesis', 'status')
    op.drop_column('thesis', 'program')
    op.alter_column('user', 'date_register',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)
    op.alter_column('user', 'date_register',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.add_column('thesis', sa.Column('program', sa.VARCHAR(length=30), autoincrement=False, nullable=False))
    op.add_column('thesis', sa.Column('status', sa.VARCHAR(length=10), autoincrement=False, nullable=False))
    op.add_column('thesis', sa.Column('semester', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'thesis', type_='foreignkey')
    op.drop_constraint(None, 'thesis', type_='foreignkey')
    op.drop_constraint(None, 'thesis', type_='foreignkey')
    op.create_foreign_key('thesis_program_fkey', 'thesis', 'program', ['program'], ['college_program'])
    op.drop_column('thesis', 'semester_id')
    op.drop_column('thesis', 'school_year')
    op.drop_column('thesis', 'research_area_id')
    op.drop_column('thesis', 'category_id')
    op.drop_constraint(None, 'subject', type_='unique')
    op.alter_column('subject', 'name',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)
    op.alter_column('subject', 'code',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
    op.drop_constraint(None, 'section', type_='unique')
    op.alter_column('section', 'code',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
    op.create_table('program',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('college_program', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='program_pkey'),
    sa.UniqueConstraint('college_program', name='program_college_program_key'),
    sa.UniqueConstraint('id', name='program_id_key')
    )
    op.drop_table('thesis_keywords')
    op.drop_table('semester')
    op.drop_table('keyword')
    op.drop_table('category')
    op.drop_table('area')
    # ### end Alembic commands ###
